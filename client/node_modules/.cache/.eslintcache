[{"/home/marboi/Work/dotnet/NoDo/client/src/index.js":"1","/home/marboi/Work/dotnet/NoDo/client/src/App.js":"2","/home/marboi/Work/dotnet/NoDo/client/src/Components/Column.jsx":"3","/home/marboi/Work/dotnet/NoDo/client/src/Components/Task.jsx":"4","/home/marboi/Work/dotnet/NoDo/client/src/Pages/ProjectPage.jsx":"5","/home/marboi/Work/dotnet/NoDo/client/src/Data/agent.js":"6"},{"size":221,"mtime":1645566198258,"results":"7","hashOfConfig":"8"},{"size":616,"mtime":1645646276480,"results":"9","hashOfConfig":"8"},{"size":2304,"mtime":1645841373451,"results":"10","hashOfConfig":"8"},{"size":2349,"mtime":1645841872117,"results":"11","hashOfConfig":"8"},{"size":696,"mtime":1645650322472,"results":"12","hashOfConfig":"8"},{"size":955,"mtime":1645840024483,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1gpfy3e",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/marboi/Work/dotnet/NoDo/client/src/index.js",[],[],["35","36"],"/home/marboi/Work/dotnet/NoDo/client/src/App.js",["37","38","39","40"],[],"import './App.css';\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport {Column} from \"./Components/Column\";\nimport {createTheme, ThemeProvider} from \"@mui/material\";\nimport {ProjectPage} from \"./Pages/ProjectPage\";\n\n\nfunction App() {\n   \n    \n    const theme = createTheme({\n        palette: {\n            background: {\n                default: '#eaeaea'\n            }\n        }\n    });\n  return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n            <h1>NoDo</h1>\n            <ProjectPage/>\n        </div>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/marboi/Work/dotnet/NoDo/client/src/Components/Column.jsx",["41","42","43","44","45"],[],"/home/marboi/Work/dotnet/NoDo/client/src/Components/Task.jsx",["46","47","48"],[],"/home/marboi/Work/dotnet/NoDo/client/src/Pages/ProjectPage.jsx",["49"],[],"// @flow \nimport * as React from 'react';\nimport {Column} from \"../Components/Column\";\nimport {Grid} from \"@mui/material\";\nimport {useEffect, useState} from \"react\";\nimport agent from \"../Data/agent\";\n\nexport const ProjectPage = () => {\n    const [columns, setColumns] = useState([]);\n\n    useEffect(async () => {\n        setColumns(await agent.getColumns())\n    },[])\n\n\n    return (\n        <div>\n            <Grid container>\n                {columns.map(column =>  (\n                    <Grid item xs={3} key={column.id}>\n                        <Column column={column}/>\n                    </Grid>\n                ))}\n                \n            </Grid>\n            \n        </div>\n    );\n};","/home/marboi/Work/dotnet/NoDo/client/src/Data/agent.js",[],[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"54","severity":1,"message":"58","line":3,"column":16,"nodeType":"56","messageId":"57","endLine":3,"endColumn":24},{"ruleId":"54","severity":1,"message":"59","line":3,"column":26,"nodeType":"56","messageId":"57","endLine":3,"endColumn":35},{"ruleId":"54","severity":1,"message":"60","line":4,"column":9,"nodeType":"56","messageId":"57","endLine":4,"endColumn":15},{"ruleId":"54","severity":1,"message":"61","line":4,"column":5,"nodeType":"56","messageId":"57","endLine":4,"endColumn":11},{"ruleId":"54","severity":1,"message":"62","line":6,"column":5,"nodeType":"56","messageId":"57","endLine":6,"endColumn":16},{"ruleId":"54","severity":1,"message":"63","line":8,"column":5,"nodeType":"56","messageId":"57","endLine":8,"endColumn":14},{"ruleId":"54","severity":1,"message":"64","line":9,"column":5,"nodeType":"56","messageId":"57","endLine":9,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":22,"column":15,"nodeType":"67","endLine":24,"endColumn":6},{"ruleId":"54","severity":1,"message":"68","line":3,"column":9,"nodeType":"56","messageId":"57","endLine":3,"endColumn":12},{"ruleId":"54","severity":1,"message":"69","line":3,"column":77,"nodeType":"56","messageId":"57","endLine":3,"endColumn":87},{"ruleId":"54","severity":1,"message":"70","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":11,"column":15,"nodeType":"67","endLine":13,"endColumn":6},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Column' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'ClickAwayListener' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Box' is defined but never used.","'Typography' is defined but never used.","'agent' is defined but never used.","no-global-assign","no-unsafe-negation"]