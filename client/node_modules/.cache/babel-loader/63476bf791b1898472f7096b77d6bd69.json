{"ast":null,"code":"import { useRegisteredDropTarget } from './useRegisteredDropTarget.mjs';\nimport { useOptionalFactory } from '../useOptionalFactory.mjs';\nimport { useDropTargetMonitor } from './useDropTargetMonitor.mjs';\nimport { useDropTargetConnector } from './useDropTargetConnector.mjs';\nimport { useCollectedProps } from '../useCollectedProps.mjs';\nimport { useConnectDropTarget } from './connectors.mjs';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\n\nexport function useDrop(specArg, deps) {\n  const spec = useOptionalFactory(specArg, deps);\n  const monitor = useDropTargetMonitor();\n  const connector = useDropTargetConnector(spec.options);\n  useRegisteredDropTarget(spec, monitor, connector);\n  return [useCollectedProps(spec.collect, monitor, connector), useConnectDropTarget(connector)];\n}","map":{"version":3,"mappings":"AAEA,SAASA,uBAAT,QAAwC,+BAAxC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA;;;;;;AAKA,OAAM,SAAUC,OAAV,CAKLC,OALK,EAQLC,IARK,EASiC;AACtC,QAAMC,IAAI,GAAGR,kBAAkB,CAACM,OAAD,EAAUC,IAAV,CAA/B;AACA,QAAME,OAAO,GAAGR,oBAAoB,EAApC;AACA,QAAMS,SAAS,GAAGR,sBAAsB,CAACM,IAAI,CAACG,OAAN,CAAxC;AACAZ,yBAAuB,CAACS,IAAD,EAAOC,OAAP,EAAgBC,SAAhB,CAAvBX;AAEA,SAAO,CACNI,iBAAiB,CAACK,IAAI,CAACI,OAAN,EAAeH,OAAf,EAAwBC,SAAxB,CADX,EAENN,oBAAoB,CAACM,SAAD,CAFd,CAAP;AAIA","names":["useRegisteredDropTarget","useOptionalFactory","useDropTargetMonitor","useDropTargetConnector","useCollectedProps","useConnectDropTarget","useDrop","specArg","deps","spec","monitor","connector","options","collect"],"sources":["/home/marboi/Work/dotnet/NoDo/client/node_modules/react-dnd/src/hooks/useDrop/useDrop.ts"],"sourcesContent":["import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useConnectDropTarget } from './connectors.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n"]},"metadata":{},"sourceType":"module"}