{"ast":null,"code":"var _jsxFileName = \"/home/marboi/Work/dotnet/NoDo/client/src/Components/Task.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { ClickAwayListener, Grid, IconButton, Paper, styled, TextField } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useState } from \"react\";\nimport { useDrag } from \"react-dnd\"; //styling for task card\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    color: theme.palette.text.secondary,\n    textAlign: 'center',\n    height: 60,\n    lineHeight: '60px'\n  };\n});\n_c = Item;\nexport const Task = _ref2 => {\n  _s();\n\n  let {\n    task,\n    handleDelete,\n    updateTask,\n    removeTaskAfterDrag\n  } = _ref2;\n  const [taskClicked, setTaskClicked] = useState(false);\n  const [updatedTask, setUpdatedTask] = useState(task);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"task\",\n    item: {\n      id: task.id,\n      columnId: task.columnId,\n      title: task.title\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    }),\n    end: item => removeTaskAfterDrag(item.id)\n  })); //changes the taskClicked state to true if a task is clicked \n\n  const handleTaskClick = () => {\n    setTaskClicked(true);\n  }; //changes taskClicked state to false if user clicks outside of card\n\n\n  const handleClickAway = () => {\n    setTaskClicked(false);\n  }; //handles the updated task form when submitted\n\n\n  const handleTaskUpdateSubmit = async e => {\n    e.preventDefault(); //called from parent component(Column)\n\n    updateTask(updatedTask, task.id);\n    setTaskClicked(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: //if task is clicked renders a form to update task, otherwise it renders the card itself\n    taskClicked ? /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleTaskUpdateSubmit,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setUpdatedTask({\n            id: task.id,\n            title: e.target.value\n          }),\n          value: updatedTask.title,\n          id: \"outlined-basic\",\n          label: \"New task\",\n          variant: \"outlined\",\n          sx: {\n            bgcolor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Item, {\n      elevation: 16,\n      sx: {\n        margin: 2\n      },\n      onClick: handleTaskClick,\n      ref: drag,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            onClick: () => handleDelete(task.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"NgIRN48eLvsfJUEQLhHbRiEelOw=\", false, function () {\n  return [useDrag];\n});\n\n_c2 = Task;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"sources":["/home/marboi/Work/dotnet/NoDo/client/src/Components/Task.jsx"],"names":["React","ClickAwayListener","Grid","IconButton","Paper","styled","TextField","DeleteIcon","useState","useDrag","Item","theme","typography","body2","color","palette","text","secondary","textAlign","height","lineHeight","Task","task","handleDelete","updateTask","removeTaskAfterDrag","taskClicked","setTaskClicked","updatedTask","setUpdatedTask","isDragging","drag","type","item","id","columnId","title","collect","monitor","end","handleTaskClick","handleClickAway","handleTaskUpdateSubmit","e","preventDefault","target","value","bgcolor","margin"],"mappings":"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","sourcesContent":["\nimport * as React from 'react';\nimport {ClickAwayListener, Grid, IconButton, Paper, styled, TextField} from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {useState} from \"react\";\nimport { useDrag } from \"react-dnd\";\n\n//styling for task card\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    color: theme.palette.text.secondary,\n    textAlign: 'center',\n    height: 60,\n    lineHeight: '60px',\n}));\n\nexport const Task = ({task, handleDelete, updateTask, removeTaskAfterDrag}) => {\n    \n    const [taskClicked, setTaskClicked] = useState(false);\n    \n    const [updatedTask, setUpdatedTask] = useState(task);\n    \n    const [{isDragging}, drag] = useDrag(() => ({\n        type: \"task\",\n        item: {id: task.id, columnId: task.columnId, title: task.title},\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        end: (item) => removeTaskAfterDrag(item.id)\n    }))\n    \n    //changes the taskClicked state to true if a task is clicked \n    const handleTaskClick = () => {\n        setTaskClicked(true)\n    };\n    //changes taskClicked state to false if user clicks outside of card\n    const handleClickAway = () => {\n        setTaskClicked(false);\n    };\n    //handles the updated task form when submitted\n    const handleTaskUpdateSubmit = async (e) => {\n            e.preventDefault();\n            //called from parent component(Column)\n            updateTask(updatedTask, task.id)\n            setTaskClicked(false);\n    }\n    \n    return (\n        <div>\n            {\n                //if task is clicked renders a form to update task, otherwise it renders the card itself\n                taskClicked ? (\n                    <ClickAwayListener onClickAway={handleClickAway}>\n                        <form noValidate autoComplete=\"off\" onSubmit={handleTaskUpdateSubmit}>\n                            <TextField\n                                onChange={(e) => setUpdatedTask({id: task.id, title: e.target.value})}\n                                value={updatedTask.title}  id=\"outlined-basic\" label=\"New task\" variant=\"outlined\" sx={{bgcolor: 'white'}}/>\n                        </form>\n                    </ClickAwayListener>\n                    \n                ) : (\n                    <Item elevation={16} sx={{ margin: 2 }} onClick={handleTaskClick} ref={drag}>\n                        <Grid container>\n                            <Grid item xs={8}>\n                                <div>\n                                    {task.title}\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <IconButton aria-label=\"delete\" onClick={() => handleDelete(task.id)} >\n                                    <DeleteIcon fontSize=\"small\"/>\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </Item>\n                )\n            \n            }\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}