{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _isPlainObject = _interopRequireDefault(require(\"./helpers/isPlainObject\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar isPrototypeOf = Object.prototype.isPrototypeOf;\n\nfunction isNewRef(prop) {\n  if (!(0, _isPlainObject[\"default\"])(prop)) {\n    return false;\n  }\n\n  var ownProperties = Object.keys(prop);\n  return ownProperties.length === 1 && ownProperties[0] === 'current';\n}\n\nfunction isCallbackRef(prop) {\n  return typeof prop === 'function' && !isPrototypeOf.call(_react.Component, prop) && (!_react.PureComponent || !isPrototypeOf.call(_react.PureComponent, prop));\n}\n\nfunction requiredRef(props, propName, componentName) {\n  var propValue = props[propName];\n\n  if (isCallbackRef(propValue) || isNewRef(propValue)) {\n    return null;\n  }\n\n  return new TypeError(\"\".concat(propName, \" in \").concat(componentName, \" must be a ref\"));\n}\n\nfunction ref(props, propName, componentName) {\n  var propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n\n  return requiredRef.apply(void 0, [props, propName, componentName].concat(rest));\n}\n\nref.isRequired = requiredRef;\n\nvar _default = function _default() {\n  return (0, _wrapValidator[\"default\"])(ref, 'ref');\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;IAEQA,a,GAAkBC,MAAM,CAACC,SAAPD,CAAlBD;;AAER,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAI,CAAC,+BAAcA,IAAd,CAAL,EAA0B;AACxB,WAAO,KAAP;AACD;;AACD,MAAMC,aAAa,GAAGJ,MAAM,CAACK,IAAPL,CAAYG,IAAZH,CAAtB;AACA,SAAOI,aAAa,CAACE,MAAdF,KAAyB,CAAzBA,IAA8BA,aAAa,CAAC,CAAD,CAAbA,KAAqB,SAA1D;AACD;;AAED,SAASG,aAAT,CAAuBJ,IAAvB,EAA6B;AAC3B,SAAO,OAAOA,IAAP,KAAgB,UAAhB,IACF,CAACJ,aAAa,CAACS,IAAdT,CAAmBU,gBAAnBV,EAA8BI,IAA9BJ,CADC,KAED,CAACW,oBAAD,IAAkB,CAACX,aAAa,CAACS,IAAdT,CAAmBW,oBAAnBX,EAAkCI,IAAlCJ,CAFlB,CAAP;AAGD;;AAED,SAASY,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,aAAtC,EAAqD;AACnD,MAAMC,SAAS,GAAGH,KAAK,CAACC,QAAD,CAAvB;;AAEA,MAAIN,aAAa,CAACQ,SAAD,CAAbR,IAA4BL,QAAQ,CAACa,SAAD,CAAxC,EAAqD;AACnD,WAAO,IAAP;AACD;;AAED,SAAO,IAAIC,SAAJ,WAAiBH,QAAjB,iBAAgCC,aAAhC,oBAAP;AACD;;AAED,SAASG,GAAT,CAAaL,KAAb,EAAoBC,QAApB,EAA8BC,aAA9B,EAAsD;AACpD,MAAMC,SAAS,GAAGH,KAAK,CAACC,QAAD,CAAvB;;AAEA,MAAIE,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AALmD,oCAANG,IAAM;AAANA,QAAM,UAANA,GAAMC,eAAND;AAAM;;AAOpD,SAAOP,WAAW,MAAXA,UAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,aAA7B,SAA+CI,IAA/C,EAAP;AACD;;AAEDD,GAAG,CAACG,UAAJH,GAAiBN,WAAjBM;;eAEe;AAAA,SAAM,+BAAcA,GAAd,EAAmB,KAAnB,CAAN","names":["isPrototypeOf","Object","prototype","isNewRef","prop","ownProperties","keys","length","isCallbackRef","call","Component","PureComponent","requiredRef","props","propName","componentName","propValue","TypeError","ref","rest","arguments","isRequired"],"sources":["/home/marboi/Work/dotnet/NoDo/client/node_modules/react-outside-click-handler/node_modules/airbnb-prop-types/src/ref.js"],"sourcesContent":["import { Component, PureComponent } from 'react';\nimport isPlainObject from './helpers/isPlainObject';\nimport wrapValidator from './helpers/wrapValidator';\n\nconst { isPrototypeOf } = Object.prototype;\n\nfunction isNewRef(prop) {\n  if (!isPlainObject(prop)) {\n    return false;\n  }\n  const ownProperties = Object.keys(prop);\n  return ownProperties.length === 1 && ownProperties[0] === 'current';\n}\n\nfunction isCallbackRef(prop) {\n  return typeof prop === 'function'\n    && !isPrototypeOf.call(Component, prop)\n    && (!PureComponent || !isPrototypeOf.call(PureComponent, prop));\n}\n\nfunction requiredRef(props, propName, componentName) {\n  const propValue = props[propName];\n\n  if (isCallbackRef(propValue) || isNewRef(propValue)) {\n    return null;\n  }\n\n  return new TypeError(`${propName} in ${componentName} must be a ref`);\n}\n\nfunction ref(props, propName, componentName, ...rest) {\n  const propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredRef(props, propName, componentName, ...rest);\n}\n\nref.isRequired = requiredRef;\n\nexport default () => wrapValidator(ref, 'ref');\n"]},"metadata":{},"sourceType":"script"}