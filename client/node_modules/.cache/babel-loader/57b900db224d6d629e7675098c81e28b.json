{"ast":null,"code":"var _jsxFileName = \"/home/marboi/Work/dotnet/NoDo/client/src/Components/Column.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport { Task } from \"./Task\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../Data/agent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Column = _ref => {\n  _s();\n\n  let {\n    column\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  useEffect(async () => {\n    setTasks(await agent.getTasks(column.id));\n  }, []);\n\n  const handleDelete = id => {\n    let newTasks = tasks.filter(task => task.id !== id);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 400,\n        margin: 2,\n        bgcolor: 'primary.main'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: column.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          handleDelete: handleDelete(task.id)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Column, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/home/marboi/Work/dotnet/NoDo/client/src/Components/Column.jsx"],"names":["React","Button","Card","CardActions","CardContent","CardMedia","Typography","Task","useEffect","useState","agent","Column","column","tasks","setTasks","getTasks","id","handleDelete","newTasks","filter","task","maxWidth","margin","bgcolor","title","map"],"mappings":";;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,SAAhD,EAA2DC,UAA3D,QAA4E,eAA5E;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClBM,IAAAA,QAAQ,CAAC,MAAMJ,KAAK,CAACK,QAAN,CAAeH,MAAM,CAACI,EAAtB,CAAP,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMC,YAAY,GAAID,EAAD,IAAQ;AACzB,QAAIE,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAf;AACAF,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEG,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,MAAM,EAAE,CAAzB;AAA4BC,QAAAA,OAAO,EAAE;AAArC,OAAV;AAAA,6BACI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAsC,UAAA,SAAS,EAAC,KAAhD;AAAA,oBACKX,MAAM,CAACY;AADZ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKX,KAAK,CAACY,GAAN,CAAUL,IAAI,iBACX,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAEA,IAA1B;AAAgC,UAAA,YAAY,EAAEH,YAAY,CAACG,IAAI,CAACJ,EAAN;AAA1D,WAAWI,IAAI,CAACJ,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA1BM;;GAAML,M;;KAAAA,M","sourcesContent":["// @flow \nimport * as React from 'react';\nimport {Button, Card, CardActions, CardContent, CardMedia, Typography} from \"@mui/material\";\nimport {Task} from \"./Task\";\nimport {useEffect, useState} from \"react\";\nimport agent from \"../Data/agent\";\n\nexport const Column = ({column}) => {\n    const [tasks, setTasks] = useState([]);\n    \n    useEffect(async () => {\n        setTasks(await agent.getTasks(column.id))\n    },[])\n    \n    const handleDelete = (id) => {\n        let newTasks = tasks.filter((task) => task.id !== id)\n        setTasks(newTasks)\n    }\n    \n    return (\n        <div>\n            <Card sx={{ maxWidth: 400, margin: 2, bgcolor: 'primary.main' }}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {column.title}\n                    </Typography>\n                    {tasks.map(task => (\n                        <Task key={task.id} task={task} handleDelete={handleDelete(task.id)}/>\n                    ))}\n                </CardContent>\n            </Card>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}