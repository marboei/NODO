{"ast":null,"code":"import { useMonitorOutput } from './useMonitorOutput.mjs';\nexport function useCollectedProps(collector, monitor, connector) {\n  return useMonitorOutput(monitor, collector || (() => ({})), () => connector.reconnect());\n}","map":{"version":3,"mappings":"AAEA,SAASA,gBAAT,QAAiC,wBAAjC;AAEA,OAAM,SAAUC,iBAAV,CACLC,SADK,EAELC,OAFK,EAGLC,SAHK,EAIJ;AACD,SAAOJ,gBAAgB,CAACG,OAAD,EAAUD,SAAS,YAAY,EAAZ,EAAnB,QACtBE,SAAS,CAACC,SAAVD,EADsB,CAAvB;AAGA","names":["useMonitorOutput","useCollectedProps","collector","monitor","connector","reconnect"],"sources":["/home/marboi/Work/dotnet/NoDo/client/node_modules/react-dnd/src/hooks/useCollectedProps.ts"],"sourcesContent":["import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}