{"ast":null,"code":"import { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.mjs';\nimport { useCollector } from './useCollector.mjs';\nexport function useMonitorOutput(monitor, collect, onCollect) {\n  const [collected, updateCollected] = useCollector(monitor, collect, onCollect);\n  useIsomorphicLayoutEffect(function subscribeToMonitorStateChange() {\n    const handlerId = monitor.getHandlerId();\n\n    if (handlerId == null) {\n      return;\n    }\n\n    return monitor.subscribeToStateChange(updateCollected, {\n      handlerIds: [handlerId]\n    });\n  }, [monitor, updateCollected]);\n  return collected;\n}","map":{"version":3,"mappings":"AACA,SAASA,yBAAT,QAA0C,iCAA1C;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAM,SAAUC,gBAAV,CACLC,OADK,EAELC,OAFK,EAGLC,SAHK,EAIO;AACZ,QAAK,CAAEC,SAAF,EAAaC,eAAb,IAAgCN,YAAY,CAACE,OAAD,EAAUC,OAAV,EAAmBC,SAAnB,CAAjD;AAEAL,2BAAyB,CACxB,SAASQ,6BAAT,GAAyC;AACxC,UAAMC,SAAS,GAAGN,OAAO,CAACO,YAARP,EAAlB;;AACA,QAAIM,SAAS,IAAI,IAAjB,EAAuB;AACtB;AACA;;AACD,WAAON,OAAO,CAACQ,sBAARR,CAA+BI,eAA/BJ,EAAgD;AACtDS,gBAAU,EAAE,CAACH,SAAD;AAD0C,KAAhDN,CAAP;AAGA,GATuB,EAUxB,CAACA,OAAD,EAAUI,eAAV,CAVwB,CAAzBP;AAaA,SAAOM,SAAP;AACA","names":["useIsomorphicLayoutEffect","useCollector","useMonitorOutput","monitor","collect","onCollect","collected","updateCollected","subscribeToMonitorStateChange","handlerId","getHandlerId","subscribeToStateChange","handlerIds"],"sources":["/home/marboi/Work/dotnet/NoDo/client/node_modules/react-dnd/src/hooks/useMonitorOutput.ts"],"sourcesContent":["import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\nimport { useCollector } from './useCollector.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n"]},"metadata":{},"sourceType":"module"}