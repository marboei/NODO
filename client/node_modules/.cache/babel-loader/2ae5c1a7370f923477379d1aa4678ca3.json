{"ast":null,"code":"var _jsxFileName = \"/home/marboi/Work/dotnet/NoDo/client/src/Pages/ProjectPage.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Column } from \"../Components/Column\";\nimport { Fab, Grid } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../Data/agent\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectPage = () => {\n  _s();\n\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    async function fetchColumns() {\n      setColumns(await agent.column.getAll());\n    }\n\n    fetchColumns();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [columns.map(column => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          column: column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"secondary\",\n          \"aria-label\": \"add\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectPage, \"FGb4ECZkue8/xp6oBDaPDOM3qWY=\");\n\n_c = ProjectPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"sources":["/home/marboi/Work/dotnet/NoDo/client/src/Pages/ProjectPage.jsx"],"names":["React","Column","Fab","Grid","useEffect","useState","agent","AddIcon","ProjectPage","columns","setColumns","fetchColumns","column","getAll","map","id"],"mappings":";;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,eAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeO,YAAf,GAA6B;AACzBD,MAAAA,UAAU,CAAC,MAAMJ,KAAK,CAACM,MAAN,CAAaC,MAAb,EAAP,CAAV;AACH;;AACDF,IAAAA,YAAY;AACf,GALQ,EAKP,EALO,CAAT;AAOA,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,iBACKF,OAAO,CAACK,GAAR,CAAYF,MAAM,iBACf,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAuBA,MAAM,CAACG,EAA9B;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAMI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAC,QAAxB;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,WAAX;AAAuB,wBAAW,KAAlC;AAAA,iCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA3BM;;GAAMP,W;;KAAAA,W","sourcesContent":["\nimport * as React from 'react';\nimport {Column} from \"../Components/Column\";\nimport {Fab, Grid} from \"@mui/material\";\nimport {useEffect, useState} from \"react\";\nimport agent from \"../Data/agent\";\nimport AddIcon from '@mui/icons-material/Add';\n\n\nexport const ProjectPage = () => {\n    const [columns, setColumns] = useState([]);\n\n    useEffect(() => {\n        async function fetchColumns(){\n            setColumns(await agent.column.getAll())\n        }\n        fetchColumns();\n    },[])\n    \n    return (\n        <div>\n            {/*renders all columns*/}\n            <Grid container>\n                {columns.map(column =>  (\n                    <Grid item xs={3} key={column.id}>\n                        <Column column={column}/>\n                    </Grid>\n                ))}\n                <Grid item xs={3} align=\"center\">\n                    <Fab color=\"secondary\" aria-label=\"add\">\n                        <AddIcon />\n                    </Fab>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}