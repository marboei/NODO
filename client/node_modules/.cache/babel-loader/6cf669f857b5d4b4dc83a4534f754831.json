{"ast":null,"code":"import { useEffect, useMemo } from 'react';\nimport { DragSourceImpl } from './DragSourceImpl.mjs';\nexport function useDragSource(spec, monitor, connector) {\n  const handler = useMemo(() => new DragSourceImpl(spec, monitor, connector), [monitor, connector]);\n  useEffect(() => {\n    handler.spec = spec;\n  }, [spec]);\n  return handler;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AAIA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,OAAM,SAAUC,aAAV,CACLC,IADK,EAELC,OAFK,EAGLC,SAHK,EAIJ;AACD,QAAMC,OAAO,GAAGN,OAAO,OAChB,IAAIC,cAAJ,CAAmBE,IAAnB,EAAyBC,OAAzB,EAAkCC,SAAlC,CADgB,EAEtB,CAACD,OAAD,EAAUC,SAAV,CAFsB,CAAvB;AAIAN,WAAS,OAAO;AACfO,WAAO,CAACH,IAARG,GAAeH,IAAfG;AACA,GAFQ,EAEN,CAACH,IAAD,CAFM,CAATJ;AAGA,SAAOO,OAAP;AACA","names":["useEffect","useMemo","DragSourceImpl","useDragSource","spec","monitor","connector","handler"],"sources":["/home/marboi/Work/dotnet/NoDo/client/node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react'\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n"]},"metadata":{},"sourceType":"module"}