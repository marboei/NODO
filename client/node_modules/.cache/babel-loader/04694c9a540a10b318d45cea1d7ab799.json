{"ast":null,"code":"var _jsxFileName = \"/home/marboi/Work/dotnet/NoDo/client/src/Components/Column.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Button, Card, CardActions, CardContent, CardMedia, ClickAwayListener, TextField, Typography } from \"@mui/material\";\nimport { Task } from \"./Task\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../Data/agent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Column = _ref => {\n  _s();\n\n  let {\n    column\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [taskClicked, setTaskClicked] = useState(false);\n  useEffect(async () => {\n    setTasks(await agent.getTasks(column.id));\n  }, [column.id, tasks]);\n\n  const handleDelete = id => {\n    let newTasks = tasks.filter(task => task.id !== id);\n    setTasks(newTasks);\n    agent.deleteTask(column.id, id);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (newTask) {\n      console.log(newTask);\n    }\n\n    await agent.addTask(column.id, {\n      title: newTask\n    });\n    e.target.value = '';\n    setNewTask('');\n  };\n\n  const handleTaskClick = () => {\n    setTaskClicked(true);\n  };\n\n  const handleClickAway = () => {\n    setTaskClicked(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 400,\n        margin: 2,\n        bgcolor: '#a8a69e'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: column.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n          onClickAway: handleClickAway,\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            task: task,\n            handleDelete: handleDelete,\n            onClick: handleTaskClick\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setNewTask(e.target.value),\n            value: newTask,\n            id: \"outlined-basic\",\n            label: \"New task\",\n            variant: \"outlined\",\n            sx: {\n              bgcolor: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Column, \"r3+NXNVOW0kcFuUj1vBznu94Tmg=\");\n\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/home/marboi/Work/dotnet/NoDo/client/src/Components/Column.jsx"],"names":["React","Button","Card","CardActions","CardContent","CardMedia","ClickAwayListener","TextField","Typography","Task","useEffect","useState","agent","Column","column","tasks","setTasks","newTask","setNewTask","taskClicked","setTaskClicked","getTasks","id","handleDelete","newTasks","filter","task","deleteTask","handleSubmit","e","preventDefault","console","log","addTask","title","target","value","handleTaskClick","handleClickAway","maxWidth","margin","bgcolor","map"],"mappings":"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","sourcesContent":["// @flow \nimport * as React from 'react';\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    ClickAwayListener,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {Task} from \"./Task\";\nimport {useEffect, useState} from \"react\";\nimport agent from \"../Data/agent\";\n\nexport const Column = ({column}) => {\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n    const [taskClicked, setTaskClicked] = useState(false);\n    \n    useEffect(async () => {\n        setTasks(await agent.getTasks(column.id))\n    },[column.id,tasks])\n    \n    const handleDelete = (id) => {\n        let newTasks = tasks.filter((task) => task.id !== id)\n        setTasks(newTasks)\n        agent.deleteTask(column.id, id)\n    }\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (newTask) {\n            console.log(newTask);\n        }\n\n        await agent.addTask(column.id, {title: newTask})\n        e.target.value = ''\n        setNewTask('')\n\n    }\n\n    const handleTaskClick = () => {\n        setTaskClicked(true)\n    };\n\n    const handleClickAway = () => {\n        setTaskClicked(false);\n    };\n    return (\n        <div>\n            <Card sx={{ maxWidth: 400, margin: 2, bgcolor: '#a8a69e' }}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {column.title}\n                    </Typography>\n                    {tasks.map(task => (\n                        <ClickAwayListener onClickAway={handleClickAway}>\n                            <Task key={task.id} task={task} handleDelete={handleDelete} onClick={handleTaskClick} />\n                        </ClickAwayListener>\n                                \n                    ))}\n                    <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <TextField onChange={(e) => setNewTask(e.target.value)} \n                                    value={newTask} id=\"outlined-basic\" label=\"New task\" variant=\"outlined\" sx={{bgcolor: 'white'}}/>\n                    </form>\n                   \n                </CardContent>\n            </Card>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}